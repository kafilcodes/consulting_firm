rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function hasRole(role) {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && request.resource.data.role == 'client';
      allow update: if isOwner(userId) || hasRole('admin');
      allow delete: if hasRole('admin');
    }

    // Orders collection
    match /orders/{orderId} {
      allow read: if isAuthenticated() && (
        resource.data.clientId == request.auth.uid || 
        hasRole('admin') || 
        hasRole('employee')
      );
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (
        resource.data.clientId == request.auth.uid || 
        hasRole('admin') || 
        hasRole('employee')
      );
      allow delete: if hasRole('admin');
    }

    // Services collection
    match /services/{serviceId} {
      allow read: if true;
      allow write: if hasRole('admin');
    }
  }
} 